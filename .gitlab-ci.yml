stages:
  - build
  - test
  - e2e
  - security
  - image_build
  - deploy_prod

# Common scripts
.common_scripts:
  npm_shared:
    - cd shared
    - npm install
    - cd ../
  npm_auth_ms:
    - cd auth-ms
    - npm install
  npm_listing_ms:
    - cd listing-ms
    - npm install
  npm_bid_ms:
    - cd bid-ms
    - npm install

# Templates
.build_template:
  image: node:iron-alpine
  stage: build
  before_script:
    - !reference [.common_scripts, npm_shared]

.test_template:
  image: node:iron-alpine
  services:
    - name: mongodb/mongodb-community-server:latest
      alias: mongo-integration
  stage: test
  before_script:
    - !reference [.common_scripts, npm_shared]

# Build
.build-auth-ms:
  extends: .build_template
  script:
    - !reference [.common_scripts, npm_auth_ms]
    - npm run build

.build-listing-ms:
  extends: .build_template
  script:
    - !reference [.common_scripts, npm_listing_ms]
    - npm run build

.build-bid-ms:
  extends: .build_template
  script:
    - !reference [.common_scripts, npm_bid_ms]
    - npm run build

# Test
.test-auth-ms:
  extends: .test_template
  variables:
    DB_CON_STRING: "mongodb://mongo-integration:27017/integration-hh-users"
  script:
    - !reference [.common_scripts, npm_auth_ms]
    - cp dotenv.test.example .env.test
    - npm run test

.test-listing-ms:
  extends: .test_template
  variables:
    DB_CON_STRING: "mongodb://mongo-integration:27017/integration-hh-listings"
  script:
    - !reference [.common_scripts, npm_listing_ms]
    - cp dotenv.test.example .env.test
    - npm run test

.test-bid-ms:
  extends: .test_template
  variables:
    DB_CON_STRING: "mongodb://mongo-integration:27017/integration-hh-bids"
  script:
    - !reference [.common_scripts, npm_bid_ms]
    - cp dotenv.test.example .env.test
    - npm run test

.test-e2e:
  stage: e2e
  image: docker:25.0.3
  services:
    - docker:25.0.3-dind
  variables:
    # connect to the docker daemon inside of the job container (docker-in-docker)
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  artifacts:
    when: always
    paths:
      - frontend/test-results/
    expire_in: 1 day
  script:
    - docker compose -f docker-compose-e2e.yml -f docker-compose-e2e-ci.yml up -d
    - docker exec e2e_tests sh -c 'npm i'
    - docker exec e2e_tests sh -c 'npm run test:e2e'

.security-owasp-zap:
  stage: security
  image: docker:25.0.3
  services:
    - docker:25.0.3-dind
  variables:
    # connect to the docker daemon inside of the job container (docker-in-docker)
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker compose -f docker-compose-e2e.yml -f docker-compose-e2e-ci.yml up -d
    - sleep 20
    - docker run --network=host --rm -v $(pwd)/zap:/zap/wrk/ -t softwaresecurityproject/zap-stable zap-full-scan.py -t http://localhost:3000 -c zap.conf 

.build-docker-production:
  stage: build
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  image: docker:25.0.3
  services:
    - docker:25.0.3-dind
  variables:
    # connect to the docker daemon inside of the job container (docker-in-docker)
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
    - docker compose -f docker-compose-e2e.yml build
    - docker image build --build-arg PORT=3000 -t ${DOCKER_USERNAME}/s6-househunters-frontend:latest -f ./frontend/Dockerfile .
    - docker image tag s6-househunters-auth-ms ${DOCKER_USERNAME}/s6-househunters-auth-ms:latest
    - docker image tag s6-househunters-listing-ms ${DOCKER_USERNAME}/s6-househunters-listing-ms:latest
    - docker image tag s6-househunters-bid-ms ${DOCKER_USERNAME}/s6-househunters-bid-ms:latest
    - docker image tag s6-househunters-media-ms ${DOCKER_USERNAME}/s6-househunters-media-ms:latest
    # Push
    - docker push ${DOCKER_USERNAME}/s6-househunters-auth-ms:latest
    - docker push ${DOCKER_USERNAME}/s6-househunters-listing-ms:latest
    - docker push ${DOCKER_USERNAME}/s6-househunters-bid-ms:latest
    - docker push ${DOCKER_USERNAME}/s6-househunters-media-ms:latest
    - docker push ${DOCKER_USERNAME}/s6-househunters-frontend:latest

deploy_k8s_production:
  stage: deploy_prod
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
  image: gcr.io/google.com/cloudsdktool/google-cloud-cli:latest
  script:
    - gcloud auth activate-service-account --key-file "$GCLOUD_KEY"
    - gcloud container clusters get-credentials househunters-cluster-1 --project=HouseHunters --location=europe-west1
    - kubectl get ingress


