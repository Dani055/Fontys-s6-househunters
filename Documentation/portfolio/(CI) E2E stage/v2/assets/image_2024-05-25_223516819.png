<!DOCTYPE html> <html> <body> <p>The e2e stage of the CI/CD pipeline deals spinning up the whole application in docker containers and executing end-to-end tests in order to determine the overall connectivity and functionality of the entire flow of the functional requirements.</p><p><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBMGF6QXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--e4bc974b2a25ff02aed21a6e2e69bd4f142c2487/image_2024-05-25_223516819.png" data-key="rcm95dmr7pnvgaawbe1geqirqe4y"></p><p>The stage uses docker compose in order to start containers for all microservices and the frontend. There are 2 docker-compose files included in this. the first one <code>docker-compose-e2e.yml</code> starts all microservices and is mainly used in development, while the <code>docker-compose-e2e.ci</code> file extends the first one and starts the frontend in its own container on <code>host</code> mode in order to take leverage of the direct access to <code>localhost</code> from the frontend container, along with a container for playwright to run in.</p><p>The code for composing the application and running e2e tests in the gitlab CI definition file is as follows:</p><pre><code>test-e2e: stage: e2e image: docker:25.0.3 services: - docker:25.0.3-dind variables: # connect to the docker daemon inside of the job container (docker-in-docker) DOCKER_HOST: tcp://docker:2375 DOCKER_TLS_CERTDIR: "" artifacts: when: always paths: - frontend/test-results/ expire_in: 1 day script: - docker compose -f docker-compose-e2e.yml -f docker-compose-e2e-ci.yml up -d - docker exec e2e_tests sh -c 'npm i' - docker exec e2e_tests sh -c 'npm run test:e2e'</code></pre><p>The image used for this job is ubuntu with docker installed. It declares a service of <code>docker-dind</code> in order to use docker-in-docker so that the CI job that is running in a docker container can use docker commands itself. Afterwards, it is as simple as starting the containers by calling the <code>docker-compose</code> files and running the e2e tests command.</p><p>The job also declares that artifacts are saved in the form of tests results. Whenever a test fails, these artifacts can be browsed in gitlab and inspected in <a target="_blank" rel="noopener noreferrer nofollow" href="http://trace.playwright.dev">trace.playwright.dev</a> for the purpose of debugging. Each artifact expires after 1 day.</p> </body> </html>