<!DOCTYPE html> <html> <body> <p>The main way in which in monitor my individual project is by using a cloud provider called Sentry. It is an open-source application monitoring system that specializes in error tracking, performance monitoring, profiling and real-time alerts. It is used by many enterprise-grade applications such as GitHub, Atlassian, VMWare, Reddit and Microsoft.</p><p><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNEhGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--64016c314c3e551cb759cd6fdb33d7259162d156/image_2024-05-28_101925202.png" data-key="3sg6xsbwgxpff5dako28sb1k48i1">In my case, I have created an organization called "HouseHunters" with projects inside for all my microservices that are being monitored. Sentry features a node SDK which is relatively easy to install and setup while following their instructions:</p><pre><code class="language-typescript">SENTRY.TS import * as Sentry from '@sentry/node' import {nodeProfilingIntegration } from "@sentry/profiling-node"; if(!process.env.SENTRY_DSN'){ console.error(`Sentry DSN is missing. Make sure it's correct for mode ${process.env.NODE_ENV}`); } Sentry.init({ dsn: process.env.SENTRY_DSN, integrations: [ nodeProfilingIntegration(), ], // Performance Monitoring enableTracing: true, maxBreadcrumbs: 10, });</code></pre><p>Afterwards, all that needs to be done is to activate the application monitoring with a single line in the main file of each microservice:</p><p><code>Sentry.setupExpressErrorHandler(app);</code><strong><br></strong>This captures relevant errors/exceptions within the application, along with performance data. As a result, any issues that occur are immediately sent to sentry and can be viewed, along with tons of information regarding what exactly went wrong. To summatize, sentry monitors information regarding events, such as:</p><ul><li><p>OS with runtime name and version</p></li><li><p>Stack trace (if applicable)</p></li><li><p>Breadcrumbs from application console</p></li><li><p>HTTP Headers</p></li><li><p>System contexts like hardware information and IP</p></li><li><p>Specific NPM packages that were used when the event happened</p></li></ul><p>Currently, the events captured are errors within the 5xx range (server side errors) and any unhandled code exceptions like database errors and RPC exceptions. Errors within the 4xx range are currently not monitored, since I do not want to get notified whenever someone inputs a wrong password for their account (for example). However, they can ultimately be useful to monitor to detect security breach attempts and bad actors trying to penetrate the system. In that case, they can pretty easily be included in the monitoring with a few lines of code in the global exception handler in each microservice:</p><pre><code class="language-typescript"> if(status &gt;= 400){ Sentry.captureException(error); }</code></pre><p><strong><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNDdGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--25bf6a858f55689013c7beef5a7d0417142eeb20/image_2024-05-28_102830514.png" data-key="3vxxx0vmyap5bt4d63linyjr3ua9"><br></strong></p><h3><strong>Notably, it also captures the internal user of the application that caused the event.</strong></h3><p><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNURGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--ce667258b3195027b2f8002cae15ef39c09fe1d3/image_2024-05-28_102931380.png" data-key="h9dzg350ozd7kzgpc3q8h1ttupr6"><br><br>Notifications can be configured depending on the type and occurance of the events so that the developers are aware of any issues with the application. In my case, I've configured it so that I receive emails.</p><p><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNlRGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--17ced593bda345d4a9d498ca890c7e34df65123e/image_2024-05-28_104604479.png" data-key="xai6739yxo9y15jjacjls40zo1ku"><br></p><hr><p>Sentry also features performance monitoring regarding queries, requests, failure rates and transactions, which is turned on for my microservices. Do keep in mind the performance tracking is a paid feature which is activated by my 14d free trial, which would expand soon.</p><p><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNWJGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--ac2e4b1eaac46993eadd63247bed0a9c6416c710/image_2024-05-28_103400573.png" data-key="0fv3ex5gz3kqecob8rwsp9quihf2"></p><hr><p>Another way in which I monitor application performance is through my deployment cloud provider, GCloud. The information found in the google cloud console is more hardware-related with the amount of CPU and RAM each microservice uses, but it is still useful information to observe. <img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNXZGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--da11a3b660008ad46933f707958c2205b809eda2/image_2024-05-28_103758075.png" data-key="xidtl338yhl79kw207638u88e2sg"></p><h3>Furthermore, GCloud also has access to the logs of each microservice, which can be used in tandem with Sentry in order to identify any issues with the application.</h3><p><img src="https://portfolio.drieam.app/api/public/v1/blobs/545ea1b8-b9c6-4fdf-9e1d-cab50ed05fbf/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBBNTdGQXc9PSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--839d7ff8c07d56cb556812fad8362f1c4ce088ee/image_2024-05-28_103857611.png" data-key="2lx29vewvr6kzzgizaac1sy1xpma"></p> </body> </html>